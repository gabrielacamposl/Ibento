# Generated by Django 3.2 on 2025-05-04 20:07

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('_id', models.CharField(default=api.models.generate_objectid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('preferencias_evento', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('codigo_reset_password', models.CharField(blank=True, max_length=6, null=True)),
                ('codigo_reset_password_expiration', models.DateTimeField(blank=True, null=True)),
                ('save_events', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('favourite_events', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('profile_pic', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('preferencias_generales', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('F', 'Femenino'), ('M', 'Masculino'), ('O', 'Otro')], max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('curp', models.CharField(blank=True, max_length=18, null=True)),
                ('is_ine_validated', models.BooleanField(default=False)),
                ('is_validated_camera', models.BooleanField(default=False)),
                ('matches', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('futuros_matches', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('blocked', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('token_fcm', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoriaEvento',
            fields=[
                ('_id', models.CharField(default=api.models.generate_objectid, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriasPerfil',
            fields=[
                ('_id', models.CharField(default=api.models.generate_objectid, max_length=50, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=150)),
                ('answers', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('multi_option', models.BooleanField(default=False)),
                ('optional', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Conversacion',
            fields=[
                ('_id', models.CharField(default=api.models.generate_objectid, max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('_id', models.CharField(default=api.models.generate_objectid, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=100)),
                ('place', models.CharField(default='', max_length=100)),
                ('price', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('location', models.CharField(max_length=100)),
                ('coordenates', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('classifications', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('dates', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('imgs', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('url', models.CharField(default='', max_length=100)),
                ('numLike', models.IntegerField(default=0)),
                ('numSaves', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TokenBlackList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=500, unique=True)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategoria',
            fields=[
                ('_id', models.CharField(default=api.models.generate_objectid, max_length=50, primary_key=True, serialize=False)),
                ('nombre_subcategoria', models.CharField(max_length=70)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategorias', to='api.categoriaevento')),
            ],
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('_id', models.CharField(default=api.models.generate_objectid, max_length=50, primary_key=True, serialize=False)),
                ('mensaje', models.TextField()),
                ('fecha_envio', models.DateTimeField(auto_now_add=True)),
                ('conversacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='api.conversacion')),
                ('receptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_recibidos', to=settings.AUTH_USER_MODEL)),
                ('remitente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_enviados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('_id', models.CharField(default=api.models.generate_objectid, max_length=50, primary_key=True, serialize=False)),
                ('fecha_match', models.DateTimeField(auto_now_add=True)),
                ('usuario_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_a', to=settings.AUTH_USER_MODEL)),
                ('usuario_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuario_b', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='conversacion',
            name='match',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat', to='api.matches'),
        ),
        migrations.AddField(
            model_name='conversacion',
            name='usuario_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats_a', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conversacion',
            name='usuario_b',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats_b', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='matches',
            constraint=models.UniqueConstraint(fields=('usuario_a', 'usuario_b'), name='unique_match_pair'),
        ),
    ]
